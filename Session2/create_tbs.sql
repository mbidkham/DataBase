CREATE TABLE [USER] (
    ID BIGINT IDENTITY(1,1), 
    NAME NVARCHAR(255) NOT NULL,
    FAMILY NVARCHAR(255) NOT NULL,
    AGE INT NULL,
    SEX BIT NULL,
    isActive BIT DEFAULT 0,  
    BIRTHDATE DATETIME NULL,
    USERNAME VARCHAR (255) NOT NULL,
    PASSWORD nvarchar(128) NOT NULL,
    CREATEDAT DATETIME not null,
    CONSTRAINT PK_USER PRIMARY KEY (ID),
    CONSTRAINT CHK_USER_AGE CHECK (AGE >= 14)
);

-- CREATE TABLE [USER] (
--     ID BIGINT IDENTITY(1,1)  PRIMARY KEY, 
--     NAME NVARCHAR(255) NOT NULL,
--     FAMILY NVARCHAR(255) NOT NULL,
--     AGE TINYINT CHECK (Age>=15),
--     SEX BIT NULL,
--     isActive BIT DEFAULT 0,
--     BIRTHDATE DATETIME NULL,
--     USERNAME VARCHAR (255) NOT NULL,
--     PASSWORD varchar(128) NOT NULL,
--     CREATEDAT DATETIME not null
-- );


select * from sys.default_constraints;
select * from sys.check_constraints;
select * from sys.key_constraints;
select * from sys.foreign_keys;

ALTER TABLE [USER]
ADD CONSTRAINT df_USER_createdAt 
DEFAULT getDate() FOR CREATEDAT;

-- ALTER TABLE [USER]
-- DROP CONSTRAINT DF__USER__isActive__5441852A; -- name of constraint

CREATE TABLE [USERIMAGE] (
    ID BIGINT IDENTITY(1,1), 
    POSTFIX VARCHAR(5),
    img VARBINARY(MAX),
    USERID BIGINT not null,
    CREATEDAT DATETIME not null,
    CONSTRAINT PK_USERIMAGE PRIMARY KEY (ID),
    CONSTRAINT FK_USERIMAGE_USER_ID FOREIGN KEY (USERID)
    REFERENCES [USER](ID)
);

-- CREATE TABLE USERIMAGE (
--     ID BIGINT IDENTITY(1,1) PRIMARY KEY, 
--     POSTFIX VARCHAR(5),
--     img VARBINARY(MAX),
--     USERID BIGINT not null FOREIGN KEY REFERENCES [USER](ID),
--     CREATEDAT DATETIME not null
-- );


CREATE TABLE MAJOR (
    ID BIGINT IDENTITY(1,1), 
    NAME NVARCHAR(255) NOt NULL,
    CONSTRAINT PK_MAJOR PRIMARY KEY (ID)
);

CREATE TABLE STUDENT (
    ID BIGINT IDENTITY(1,1), 
    GRADE TINYINT NOt NULL,
    MAJORID BIGINT NOT NULL,
    CONSTRAINT PK_STUDENT PRIMARY KEY (ID),
    CONSTRAINT FK_STUDENT_USER_ID FOREIGN KEY (ID)
    REFERENCES [USER](ID),
    CONSTRAINT FK_STUDENT_MAJORID FOREIGN KEY (MAJORID)
    REFERENCES MAJOR(ID),
);

CREATE TABLE BOOK (
    ID BIGINT IDENTITY(1,1), 
    NAME NVARCHAR(255) NOt NULL,
    CONSTRAINT PK_BOOK PRIMARY KEY (ID)
);

CREATE TABLE BOOKMAJORMID (
    ID BIGINT IDENTITY(1,1), 
    BOOKID BIGINT NOT NULL,
    MAJORID BIGINT NOT NULL,
    GRADE TINYINT NOT NULL,
    CONSTRAINT PK_BOOKMAJORMID PRIMARY KEY (ID),
    CONSTRAINT FK_BOOKMAJORMID_MAJORID FOREIGN KEY (MAJORID)
    REFERENCES MAJOR(ID),
    CONSTRAINT FK_BOOKMAJORMID_BOOKID FOREIGN KEY (BOOKID)
    REFERENCES BOOK(ID),
    CONSTRAINT UQ_BOOKMAJORMID UNIQUE(MAJORID, BOOKID, GRADE)
);

CREATE TABLE TOPIC (
    ID BIGINT IDENTITY(1,1), 
    NAME NVARCHAR(255) NOt NULL,
    PARENTID BIGINT,
    ISLEAF BIT NOT NULL,
    CONSTRAINT PK_TOPIC PRIMARY KEY (ID),
    CONSTRAINT FK_TOPIC_PARENTID FOREIGN KEY (PARENTID)
    REFERENCES TOPIC(ID)
);

CREATE TABLE BOOKTOPICMID (
    ID BIGINT IDENTITY(1,1), 
    BOOKID BIGINT NOT NULL,
    TOPICID BIGINT NOT NULL,
    CONSTRAINT PK_BOOKTOPICMID PRIMARY KEY (ID),
    CONSTRAINT FK_BOOKTOPICMID_TOPICID FOREIGN KEY (TOPICID)
    REFERENCES TOPIC(ID),
    CONSTRAINT FK_BOOKTOPICMID_BOOKID FOREIGN KEY (BOOKID)
    REFERENCES BOOK(ID),
    CONSTRAINT UQ_BOOKTOPICMID UNIQUE(TOPICID, BOOKID)
);


DROP TABLE STUDENT;
DROP TABLE BOOKMAJORMID;
DROP TABLE BOOKTOPICMID;
DROP TABLE BOOK;
DROP TABLE TOPIC;
DROP TABLE MAJOR;
drop TABLE USERIMAGE;
drop TABLE [USER];
